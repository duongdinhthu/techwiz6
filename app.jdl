entity UserPet {
  name String required maxlength(1000),
  email String required maxlength(1000) unique,
  passwordHash String required maxlength(1000),
  phone String maxlength(1000),
  address String maxlength(1000),
  role UserRole required,
  avatar String maxlength(1000),
  createdAt Instant
}

enum UserRole {
  OWNER, VET, SHELTER
}

entity Pet {
  ownerId Long required,
  name String required maxlength(1000),
  species String maxlength(1000),
  breed String maxlength(1000),
  age Integer,
  gender Gender,
  photoUrl String maxlength(1000),
  avatar String maxlength(1000),
  createdAt Instant
}

enum Gender {
  MALE, FEMALE
}

entity Discovery {
  name String required maxlength(1000),
  description String maxlength(1000),
  category String maxlength(500),
  requirements String maxlength(1000),
  location String maxlength(500),
  createdAt Instant
}


// ðŸ”¹ Giá»¯ petId báº¯t buá»™c khi Ä‘áº·t lá»‹ch
entity Appointment {
  petId Long required,             // báº¯t buá»™c pháº£i cÃ³ pet
  ownerId Long required,
  discoveryId Long required,
  apptTime Instant required,
  vetId Long,                      // optional, gÃ¡n sau khi phÃ¢n cÃ´ng
  status AppointmentStatus,
  createdAt Instant
}

enum AppointmentStatus {
  PENDING, CONFIRMED, CANCELLED, DONE
}

entity HealthRecord {
  petId Long required,
  vetId Long required,
  apptId Long required,
  diagnosis String maxlength(1000),
  treatment String maxlength(1000),
  notes String maxlength(1000),
  createdAt Instant
}

// --- JHipster common options ---
dto * with mapstruct
service * with serviceClass
paginate * with pagination
filter *
